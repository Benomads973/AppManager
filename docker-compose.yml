name: AppManager

services:

  rnsfront:
    image: maissacrement/benomads-appmanager-front:0.0.1 # Get from internet
    #build: # Build locally
    #  context: ./frontend
    ports:
      - "8887:80"

  # BACKEND SERVER MACHINE NAME
  rnsback:
    image: maissacrement/benomads-appmanager-front:0.0.1 # Get from internet
    #build: # build locally
    #  context: ./backend # Building Docker file from '.' the current repository
    depends_on:
      - mongodb
    #ports:
    #  - "$APP_PORT:$APP_PORT"
    scale: 20
    networks:
      - mongo-private-tunnel
    environment:
      MONGO_USER: $MONGO_USER
      MONGO_PASSWORD: $MONGO_PASSWORD
      MONGO_URL: $MONGO_URL
      APP_PORT: $APP_PORT
      BENOMADS_HOST: $BENOMADS_HOST
      BENOMADS_API_KEY: $BENOMADS_API_KEY
      
  # N'exposé mongo que quand vous etes en devellopement
  # MONGODB MACHINE NAME
  mongodb:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_USER
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_PASSWORD
      MONGO_INITDB_DATABASE: test
    # Exposer le port de mongo publiquement
    #ports:
    #  - 0.0.0.0:27017:27017
    networks:
      - mongo-private-tunnel

  # N'exposé mongo que quand vous etes en devellopement
  # MONGODB-EXPRESS MACHINE NAME
  mongo-express:
    image: mongo-express
    restart: always
    depends_on:
      - mongodb
    ports:
      - 8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: $MONGO_USER
      ME_CONFIG_MONGODB_ADMINPASSWORD: $MONGO_PASSWORD
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017
      ME_CONFIG_BASICAUTH: false
    networks:
      - mongo-private-tunnel

networks:
  mongo-private-tunnel: